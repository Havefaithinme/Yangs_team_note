https://www.youtube.com/playlist?list=PLVsNizTWUw7H9_of5YCB0FmsSc-K44y81

온라인저지
해외 
코드포스 www.codeforces.com
탑코더 www.topcoder.com
릿코드 www.leetcode.com
코드셰프 www.codechef.com

국내
백준온라인저지 www.acmicpc.net 대기업 기출문제 다수 수록, 유형별로 수록, 가장 많이 이용
코드업 www.codeup.kr 처음 알고리즘 문제풀이 시작할 때 추천 
프로그래머스 www.programmers.co.kr 다양한 문제들을 포함 
SW Expert Academy www.swexpertacademy.com


온라인 개발환경 (python)
리플릿 www.repl.it/languages/python3
파이썬 튜터 www.pythontutor.com/visualize.html

오프라인 개발환경 
파이참 

자신만의 소스코드 관리하기 
팀노트 - www.github.com/ndb796/Pthon-Competitive-Progrmming-Team-Notes


요구사항에 따라 적절한 알고리즘 설계하기 


요구사항에 따라 적절한 알고리즘 설계하기 
시간제한이 1초인 문제를 만났을 때, 일반적인 기준 (파이썬)
N의 범위가 500 O(N^3)
N의 범위가 2000 O(N^2)
N의 범위가 100000 O(NlogN)
N의 범위가 10000000 O(N)
일반적으로 그렇다는 것 

일반적인 알고리즘 문제 해결과정
1.지문 읽기 및 컴퓨터적 사고 
2.요구사항 분석(복잡도)
3.문제해결을 위한 아이디어 찾기
4.소스코드 설계 및 코딩 

일반적으로 대부분의 문제 출제자들은 핵심 아이디어를 캐치한다면, 간결하게 소스코드를 작성 할 수 있는 형태로 문제를 출제한다. 

수행시간측정 소스코드 예제
import time
start_time = time.time()

end_time = time.time()
print("time:", end_time - start_time)
